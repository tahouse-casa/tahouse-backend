name: Build, Test & Deploy [DEVELOP]

on:
  push:
    branches: [ "develop" ]
    
env:
  PROJECT: tahouse
  REGION: us-central1
  ARTIFACTORY: dev-tahouse
  SERVICE: dev-tahouse-backend

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16.14.2
    - name: Install dependecies
      run: npm ci
    #- name: Test
    #  run: npm test
    - name: Create personalized variables
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Docker Auth
      id: docker-auth
      uses: 'docker/login-action@v2'
      with:
        username: _json_key
        password: '${{ secrets.GCP_CREDENTIALS }}'
        registry: '${{ env.REGION }}-docker.pkg.dev'
    - name: Build and Push Container
      run: |-
        docker build -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.ARTIFACTORY }}/${{ env.SERVICE }}:${{ steps.vars.outputs.sha_short }}" -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.ARTIFACTORY }}/${{ env.SERVICE }}:latest" ./
        docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.ARTIFACTORY }}/${{ env.SERVICE }}" --all-tags

  deploy-dev:
    environment: dev
    runs-on: ubuntu-latest
    needs: [build-test-push]
    steps:
    - uses: actions/checkout@v3
    - name: Create personalized variables
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        env_vars: |
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          API_KEY=${{ secrets.API_KEY }}
          EMAIL_USER=${{ secrets.EMAIL_USER }}
          EMAIL_PASS=${{ secrets.EMAIL_PASS }}
          "GOOGLE_KEY=${{ secrets.GOOGLE_KEY }}"
        service: ${{ env.SERVICE }}
        region: ${{ env.REGION }}
        image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT }}/${{ env.ARTIFACTORY }}/${{ env.SERVICE }}:${{ steps.vars.outputs.sha_short }}
    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }} 
